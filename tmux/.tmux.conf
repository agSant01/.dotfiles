# ████████╗███╗   ███╗██╗   ██╗██╗  ██╗
# ╚══██╔══╝████╗ ████║██║   ██║╚██╗██╔╝
#    ██║   ██╔████╔██║██║   ██║ ╚███╔╝
#    ██║   ██║╚██╔╝██║██║   ██║ ██╔██╗
#    ██║   ██║ ╚═╝ ██║╚██████╔╝██╔╝ ██╗
#    ╚═╝   ╚═╝     ╚═╝ ╚═════╝ ╚═╝  ╚═╝
# Terminal multiplexer
# https://github.com/tmux/tmux
# cSpell:words
set -ga terminal-overrides ",screen-256color*:Tc"
set-option -g default-terminal "screen-256color"
set -s escape-time 1

set -g renumber-windows on   # renumber all windows when any window is closed
set -g status-interval 2     # update the status bar

unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

###################
##  Status line  ##
###################
set -g status-left-length 200    # increase length (from 10)
set -g status-left "[#S] "
# set -ga status-left " #($HOME/.tmux-git.sh)"
set -g status-style 'bg=#333333 fg=#5eacd3'
set -g status-position bottom

# source tmux-conf with <PREFIX>+r
bind -r r source-file ~/.tmux.conf
set -g base-index 1
set -g mouse on

# set keys to vi
set-window-option -g mode-keys vi

# copy
bind -T copy-mode-vi v send-keys -X begin-selection

# yank
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'

# vim-like pane switching
bind -r ^ last-window
bind -r k select-pane -U
bind -r j select-pane -D
bind -r h select-pane -L
bind -r l select-pane -R

## list with FZF the open sessions. ignore output
# hack, if-shell is intended as a if-true else
bind-key -r l if-shell -b "tmux-list-sessions" ""

# forget the find window.  That is for chumps
# find for session
bind-key -r f neww -c "#{pane_current_path}" -n 'new-session'  "tmux-sessionizer"

# find for new pane/window
bind-key -n M-f neww -c "#{pane_current_path}" -n "new-window" "tmux-windowizer"

# previous session
bind-key -r P switch-client -p
# next session
bind-key -r N switch-client -n

# cheat.sh right info pane
bind-key -r i split-window -h "tmux-cht.sh"

# open todo
bind-key -r T neww -c "#{pane_current_path}" "vim ~/TODO.md"

# open new window in same dir
bind-key -r c neww -c "#{pane_current_path}"

# split panes hor and vertical
bind-key -r - splitw
bind-key -r | splitw -h
unbind %
unbind '"'

# quick view of processes
bind-key -r '~' split-window "exec htop"

bind-key -r e neww -c "#{pane_current_path}" "fd -H -t file -E .git/ . | fzf --multi --preview 'cat {}' --bind 'enter:become(vim {+})'"

