#!/usr/bin/env bash

CONFIG_FILE=.drsync.conf
IGNORE_FILE=.drsyncignore

PNAME=$(basename $0)

echoerr() { printf "%s\n" "$*" >&2; }

args="^-h|^--help|^--remote-to-host|^--host-to-remote|^-v|^--verbose|^-n|^--dry-run|^-dig|^--dump-ignore"
if [ $# -ne 0 ]; then
    for arg in $@; do
        if [[ ! "$arg" =~ $args ]]; then
            echoerr "$PNAME error: argument \"$arg\" not recognized"
            exit 1
        fi
    done
fi

if [[ " $@ " =~ ( -h )|( --help )  ]]; then
    echo "DoctorSync: drsync 1.0"
    echo -e "Gabriel Santiago <github:agSant01>\n"
    echo -e "Utility to wrap rsync. Syncs \$PWD with a remote server with [HOST:REMOTE] and [REMOTE_FOLDER] specified in \$PWD/$CONFIG_FILE"
    echo -e "\nUSAGE:\n"
    echo -e "    $PNAME -h|--help\t\t\tShow this menu."
    echo -e "    $PNAME --remote-to-host [default] \tSync (download) files from remote to this computer (localhost)."
    echo -e "    $PNAME --host-to-remote\t\tSync (upload) files from this computer (localhost) to the remote."
    exit 0;
fi

if [[ ! -f $PWD/$CONFIG_FILE ]]; then
    echoerr -e "$PNAME error: $CONFIG_FILE not found"
    echo -e "HOST=\nUSER=\nREMOTE_FOLDER=" > $PWD/$CONFIG_FILE
    echoerr -e "$PNAME: creating $PWD/$CONFIG_FILE"
    exit 1
else
    source $PWD/$CONFIG_FILE
    if [[ $? -ne 0 ]]; then
        echoerr "$PNAME error: could not source $PWD/$CONFIG_FILE"
        exit 2
    fi
    if [[ -z $HOST || -z $USER || -z $REMOTE_FOLDER ]]; then
        echoerr "$PNAME error: $CONFIG_FILE variables(s) not initialized"
        exit 3
    fi
fi

if [[ ! -f $PWD/$IGNORE_FILE ]]; then
    echo -e ".git\n$CONFIG_FILE\n$IGNORE_FILE" > $PWD/$IGNORE_FILE
fi

# default behaviour: SYNC FROM REMOTE TO LOCAL
SOURCE="$USER@$HOST:$REMOTE_FOLDER"
DEST="$PWD"
i=0
MODES_REGEX="(--host-to-remote)|(--remote-to-host)"
for match in $(echo "$@" | grep -Po $MODES_REGEX); do
    ((i++))
    if [[ $i -ge 2 ]]; then
        echoerr "$PNAME error: cant use both [--host-to-remote] and [--remote-to-host]"
        exit 1
    fi
    if [[ "$match" =~ --remote-to-host ]]; then
        # --remote-to-host flag
        SOURCE="$USER@$HOST:$REMOTE_FOLDER"
        DEST="$PWD/"
    elif [[ "$match" =~ --host-to-remote ]]; then
        SOURCE="$PWD/"
        DEST="$USER@$HOST:$REMOTE_FOLDER"
    fi
done

echo "$PNAME: Connecting to \"$USER@$HOST\""
echo "$PNAME: Source folder: $SOURCE"
echo "$PNAME: Destination folder: $DEST"

VERBOSE=$(echo "$@" | grep -Eo "(-v|--verbose)")

if [[ " $@ " =~ ( -n )|( --dry-run ) ]]; then
    EXIT=1
    echo -e "$PNAME dry-run:\n\n=>rsync -haz $VERBOSE --progress --recursive --exclude-from="$PWD/$IGNORE_FILE" $SOURCE $DEST\n"
    exit 0
fi

if [[ " $@ " =~ ( -dig )|( --dump-ignore ) ]]; then
    EXIT=1
    echo -e "Excluding the files:\n---\n$(cat $PWD/$IGNORE_FILE)\n---"
    exit 0
fi

[ $EXIT ] && exit 0;

rsync -haz $VERBOSE $extra --progress --recursive --exclude-from="$PWD/$IGNORE_FILE" $SOURCE $DEST